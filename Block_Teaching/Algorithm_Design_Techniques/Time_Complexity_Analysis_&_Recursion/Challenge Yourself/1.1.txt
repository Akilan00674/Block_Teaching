
The output displays the sequence of moves required to solve the puzzle.

The last line of output displays the total number of times the disk is moved.



Refer to the sample output for formatting specifications.

Code constraints :
The given test cases fall under the following specifications:

1 ≤ n ≤ 8

Sample test cases :
Input 1 :
3
Output 1 :
Move disk 1 from A to C
Move disk 2 from A to B
Move disk 1 from C to B
Move disk 3 from A to C
Move disk 1 from B to A
Move disk 2 from B to C
Move disk 1 from A to C
Total number of times the disk is moved: 7
Input 2 :
4
Output 2 :
Move disk 1 from A to B
Move disk 2 from A to C
Move disk 1 from B to C
Move disk 3 from A to B
Move disk 1 from C to A
Move disk 2 from C to B
Move disk 1 from A to B
Move disk 4 from A to C
Move disk 1 from B to C
Move disk 2 from B to A
Move disk 1 from C to A
Move disk 3 from B to C
Move disk 1 from A to B
Move disk 2 from A to C
Move disk 1 from B to C
Total number of times the di


#include <bits/stdc++.h>
using namespace std;

int moveCount = 0;

void towerOfHanoi(int n, char from, char to, char aux) {
    if (n == 0) return;

    towerOfHanoi(n - 1, from, aux, to);
    cout << "Move disk " << n << " from " << from << " to " << to << endl;
    moveCount++;
    towerOfHanoi(n - 1, aux, to, from);
}

int main() {
    int n;
    cin >> n;

    towerOfHanoi(n, 'A', 'C', 'B');

    cout << "Total number of times the disk is moved: " << moveCount;
    return 0;
}


