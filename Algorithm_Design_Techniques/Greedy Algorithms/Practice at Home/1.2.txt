Single File Programming Question
Problem Statement



Kevin is a computer science enthusiast exploring the intricacies of graph theory. He is actively developing a program that, given an adjacency matrix, calculates the chromatic number of an undirected graph. The chromatic number is the minimum count of colors needed to color the graph vertices, ensuring neighboring vertices have distinct colors.



Your role is to support Kevin in implementing this algorithm, facilitating his understanding of chromatic numbers and their application in practical problem-solving.

Input format :
The first line contains an integer v, representing the number of vertices in the graph.

The next v lines contain the adjacency matrix of the graph, where each line contains v space-separated integers (0 or 1).

Output format :
The output prints "Chromatic Number of the graph is: " followed by an integer representing the chromatic number of the graph.



Refer to the sample output for the formatting specifications.

Code constraints :
1 ≤ v ≤ 50

Sample test cases :
Input 1 :
4
0 1 1 1
1 0 1 0
1 1 0 1
1 0 1 0
Output 1 :
Chromatic Number of the graph is: 3
Input 2 :
5
0 1 0 1 0
1 0 1 0 1
0 1 0 1 0
1 0 1 0 1
0 1 0 1 0
Output 2 :
Chromatic Number of the graph is: 2
Input 3 :
5
0 1 1 0 0
1 0 1 1 0
1 1 0 1 1
0 1 1 0 1
0 0 1 1 0
Output 3 :
Chromatic Number of the graph




#include <bits/stdc++.h>
using namespace std;

bool isSafe(int v, vector<vector<int>>& graph, vector<int>& color, int c, int V) {
    for (int i = 0; i < V; i++) {
        if (graph[v][i] && color[i] == c) return false;
    }
    return true;
}

bool graphColoringUtil(vector<vector<int>>& graph, int m, vector<int>& color, int v, int V) {
    if (v == V) return true;
    for (int c = 1; c <= m; c++) {
        if (isSafe(v, graph, color, c, V)) {
            color[v] = c;
            if (graphColoringUtil(graph, m, color, v + 1, V)) return true;
            color[v] = 0;
        }
    }
    return false;
}

int findChromaticNumber(vector<vector<int>>& graph, int V) {
    for (int m = 1; m <= V; m++) {
        vector<int> color(V, 0);
        if (graphColoringUtil(graph, m, color, 0, V)) return m;
    }
    return V;
}

int main() {
    int V;
    cin >> V;
    vector<vector<int>> graph(V, vector<int>(V));
    for (int i = 0; i < V; i++) {
        for (int j = 0; j < V; j++) cin >> graph[i][j];
    }
    int chromaticNumber = findChromaticNumber(graph, V);
    cout << "Chromatic Number of the graph is: " << chromaticNumber;
    return 0;
}
