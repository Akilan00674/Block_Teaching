Single File Programming Question
Problem Statement



Given text string with length n and a pattern with length m, the task is to prints all occurrences of pattern in text.



Note: You may assume that n > m.

Use zero-based indexing while returning the indices. 



Example:



Input:  text =“THIS IS A TEST TEXT”, pattern = “TEST”

Output: Pattern found at index 10



Input:  text = “AABAACAADAABAABA”, pattern = “AABA”

Output: Pattern found at index 0, Pattern found at index 9, Pattern found at index 12





Input format :
The first line of input consists of a string txt, in which the pattern is to be searched.

The second line of input consists of a string pat, the pattern that needs to be found in the text.

Output format :
For each occurrence of the pattern in the text, print "Pattern found at index X" in a new line, where X the indices where the pattern is found within the text string.



Refer to the sample output for the formatting specifications.

Code constraints :
The text and the pattern will only contain uppercase and lowercase English letters.

1 ≤ length of txt ≤ 50

1 ≤ length of pat ≤ 10

Sample test cases :
Input 1 :
THIS IS A TEST TEXT
TEST
Output 1 :
Pattern found at index 10
Input 2 :
AABAACAADAABAABA
AABA
Output 2 :
Pattern found at index 0
Pattern found at index 9
Pattern found at index 12
Input 3 :
agd
g
Output 3 :
Pattern found at index 1






#include <bits/stdc++.h>
using namespace std;

int main() {
    string txt, pat;
    getline(cin, txt);
    getline(cin, pat);

    int n = txt.size(), m = pat.size();

    for (int i = 0; i <= n - m; i++) {
        if (txt.substr(i, m) == pat) {
            cout << "Pattern found at index " << i << endl;
        }
    }
    return 0;
}
