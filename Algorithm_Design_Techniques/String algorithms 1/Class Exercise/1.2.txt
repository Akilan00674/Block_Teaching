Single File Programming Question
Problem Statement



Slide the pattern over the text one by one and check for a match. If a match is found, then slide by 1 again to check for subsequent matches.  Given a text txt[0..n-1] and a pattern pat[0..m-1], write a function search(char pat[], char txt[]) that prints all occurrences of pat[] in txt[]. You may assume that n > m. 

Input format :
The first line of input consists of the string.

The second line of input consists of the pattern.

Output format :
The output prints the indices at which the pattern is found.



Refer to the sample output for the formatting specifications.

Code constraints :
2 < length of the pattern < length of the string < 100

Sample test cases :
Input 1 :
AABAACAADAABAAABAA
AABA
Output 1 :
Pattern found at index 0
Pattern found at index 9
Pattern found at index 13
Input 2 :
UVWXYZABWXYZABCWXYZ
XYZ
Output 2 :
Pattern found at index 3
Pattern found at index 9
Pattern found at index 16






#include <bits/stdc++.h>
using namespace std;

int main() {
    string txt, pat;
    getline(cin, txt);
    getline(cin, pat);

    int n = txt.size(), m = pat.size();

    for (int i = 0; i <= n - m; i++) {
        int j;
        for (j = 0; j < m; j++) {
            if (txt[i + j] != pat[j])
                break;
        }
        if (j == m) {
            cout << "Pattern found at index " << i << endl;
        }
    }
    return 0;
}
