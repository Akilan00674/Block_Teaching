Single File Programming Question
Problem Statement



Olivia is working on a project where she needs to manage a list of unique employee IDs assigned to her team members. She decided to implement a Max Heap data structure to manage and retrieve these IDs based on their values efficiently.



This allows her to quickly access the employee with the highest ID. After inserting all IDs from 1 to a given maximum value, she wants to display the IDs in the heap structure and calculate the total sum of all IDs stored in the heap.



Help Olivia write a program to achieve this functionality.

Input format :
The input consists of a single integer n, which represents the maximum ID that will be inserted into the Max Heap.

Output format :
The first output displays the elements in the Max Heap in a single line, separated by spaces: <heap_elements>

where <heap_elements> are the IDs in the Max Heap displayed in heap order.



Then, the second output is the total sum of all IDs in the Max Heap: <total_sum>



Refer to the sample output for the formatting specifications.

Code constraints :
The given test cases fall under the following constraints:

1 ≤ n ≤ 10

Sample test cases :
Input 1 :
3
Output 1 :
3 1 2 
6
Input 2 :
5
Output 2 :
5 4 2 1 3 
15


#include <iostream>
#include <vector>
using namespace std;

void heapifyUp(vector<int> &heap, int index) {
    while (index > 0) {
        int parent = (index - 1) / 2;
        if (heap[parent] < heap[index]) {
            swap(heap[parent], heap[index]);
            index = parent;
        } else {
            break;
        }
    }
}

int main() {
    int n;
    cin >> n;
    vector<int> heap;
    int sum = 0;

    for (int id = 1; id <= n; ++id) {
        heap.push_back(id);
        heapifyUp(heap, heap.size() - 1);
        sum += id;
    }

    for (int w : heap) cout << w << " ";
    cout << endl;
    cout << sum << endl;

    return 0;
}









