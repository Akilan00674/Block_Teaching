Single File Programming Question
Problem Statement



Amit, an e-commerce manager, is working on an inventory management system to track the top-selling products. Given the sales data of various products, he wants to quickly determine the Kth best-selling product to make informed restocking decisions.



Help Amit implement Heap Sort to efficiently find the Kth best-selling product from the given sales data.

Input format :
The first line of input consists of an integer n, representing the number of products.

The second line consists of n space-separated integers, representing the sales data of each product.

The third line contains an integer K, representing the rank of the product to retrieve.

Output format :
The output prints the Kth best-selling product based on the given sales data.



Refer to the sample output for formatting specifications.

Code constraints :
The given test cases fall under the following specifications:

1 ≤ n ≤ 105

1 ≤ sales data of each product ≤ 109

1 ≤ K ≤ n

Sample test cases :
Input 1 :
5
10 20 15 5 25
2
Output 1 :
20
Input 2 :
8
50 30 40 20 10 25 15 35
4
Output 2 :
30



#include <iostream>
#include <vector>
#include <queue>
using namespace std;

int main() {
    int n;
    cin >> n;
    vector<long long> sales(n);
    for (int i = 0; i < n; ++i) cin >> sales[i];

    int K;
    cin >> K;

    priority_queue<long long, vector<long long>, greater<long long>> minHeap;

    for (int i = 0; i < n; ++i) {
        if (minHeap.size() < K) {
            minHeap.push(sales[i]);
        } else if (sales[i] > minHeap.top()) {
            minHeap.pop();
            minHeap.push(sales[i]);
        }
    }

    cout << minHeap.top() << endl;

    return 0;
}







